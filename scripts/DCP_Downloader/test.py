import re

bodies = [
    "Good morning!\r\n\r\nHere's a solution to yesterday's problem.\r\n[https://dailycodingproblem.com/solution/216?token=cd412d83a05a9eef5dffd1dffb5a0fdbc199db2ad06db8946a9269bb7b1818547b37491a]\r\n\r\nThis is your coding interview problem for today.\r\n\r\nThis problem was asked by Oracle.\r\n\r\nWe say a number is sparse if there are no adjacent ones in its binary\r\nrepresentation. For example, 21 (10101) is sparse, but 22 (10110) is not. For a\r\ngiven input N, find the smallest sparse number greater than or equal to N.\r\n\r\nDo this in faster than O(N log N) time.\r\n\r\nWe will be sending the solution tomorrow, along with tomorrow's question. As\r\nalways, feel free to shoot us an email if there's anything we can help with.\r\n\r\nHave a great day!\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nMaster algorithms together on Binary Search [https://binarysearch.io/?ref=dcp].\r\nCreate a room, invite your friends, and race to finish the problem!",
    "Good morning!\r\n\r\nHere's a solution to yesterday's problem.\r\n[https://dailycodingproblem.com/solution/177?token=12e9834bb8019b5ea959a3dfa33b21954aa8f958b56382062f581d54d70853f6735d07be]\r\n\r\nThis is your coding interview problem for today.\r\n\r\nThis problem was asked by Two Sigma.\r\n\r\nAlice wants to join her school's Probability Student Club. Membership dues are\r\ncomputed via one of two simple probabilistic games.\r\n\r\nThe first game: roll a die repeatedly. Stop rolling once you get a five followed\r\nby a six. Your number of rolls is the amount you pay, in dollars.\r\n\r\nThe second game: same, except that the stopping condition is a five followed by\r\na five.\r\n\r\nWhich of the two games should Alice elect to play? Does it even matter? Write a\r\nprogram to simulate the two games and calculate their expected value.\r\n\r\nWe will be sending the solution tomorrow, along with tomorrow's question. As\r\nalways, feel free to shoot us an email if there's anything we can help with.\r\n\r\nHave a great day!\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nMaster algorithms together on Binary Search [https://binarysearch.io/?ref=dcp].\r\nCreate a room, invite your friends, and race to finish the problem!",
    'Good morning!\r\n\r\nHere\'s a solution to yesterday\'s problem.\r\n[https://dailycodingproblem.com/solution/152?token=bf488332f40c5ae79471959838632de4d9a54a7b9951c23246a0a44a252ec31c12c52309]\r\n\r\nThis is your coding interview problem for today.\r\n\r\nFind an efficient algorithm to find the smallest distance (measured in number of\r\nwords) between any two given words in a string.\r\n\r\nFor example, given words "hello", and "world" and a text content of "dog cat\r\nhello cat dog dog hello cat world", return 1 because there\'s only one word "cat"\r\nin between the two words.\r\n\r\nWe will be sending the solution tomorrow, along with tomorrow\'s question. As\r\nalways, feel free to shoot us an email if there\'s anything we can help with.\r\n\r\nHave a great day!\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nMaster algorithms together on Binary Search [https://binarysearch.io/?ref=dcp].\r\nCreate a room, invite your friends, and race to finish the problem!',
    "Good morning! Here's your coding interview problem for today.\r\n\r\nThis problem was asked by Facebook.\r\n\r\nGiven the mapping a = 1, b = 2, ... z = 26, and an encoded message, count the\r\nnumber of ways it can be decoded.\r\n\r\nFor example, the message '111' would give 3, since it could be decoded as 'aaa',\r\n'ka', and 'ak'.\r\n\r\nYou can assume that the messages are decodable. For example, '001' is not\r\nallowed.\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nUpgrade to premium\r\n[https://www.dailycodingproblem.com/subscribe?email=luke343279%40gmail.com] and\r\nget in-depth solutions to every problem, including this one. \r\n\r\nIf you liked this problem, feel free to forward it along so they can subscribe\r\nhere [https://www.dailycodingproblem.com/]! As always, shoot us an email if\r\nthere's anything we can help with!\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nMaster algorithms together on Binary Search [https://binarysearch.io/?ref=dcp].\r\nCreate a room, invite your friends, and race to finish the problem!\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nNo more? Snooze or unsubscribe\r\n[https://dailycodingproblem.com/unsubscribe?unsubscribeKey=792f0497373d0d3aaf3d30bbdb05e642bd8f7df130a19fa176a50f4289d5dd4c8728ec8c]\r\n.",
    "Good morning! Here's your coding interview problem for today.\r\n\r\nThis problem was recently asked by Google.\r\n\r\nGiven a list of numbers and a number k, return whether any two numbers from the\r\nlist add up to k.\r\n\r\nFor example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17.\r\n\r\nBonus: Can you do this in one pass?\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nUpgrade to premium\r\n[https://www.dailycodingproblem.com/subscribe?email=luke343279%40gmail.com] and\r\nget in-depth solutions to every problem, including this one. \r\n\r\nIf you liked this problem, feel free to forward it along so they can subscribe\r\nhere [https://www.dailycodingproblem.com/]! As always, shoot us an email if\r\nthere's anything we can help with!\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nMaster algorithms together on Binary Search [https://binarysearch.io/?ref=dcp].\r\nCreate a room, invite your friends, and race to finish the problem!\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n\r\nNo more? Snooze or unsubscribe\r\n[https://dailycodingproblem.com/unsubscribe?unsubscribeKey=792f0497373d0d3aaf3d30bbdb05e642bd8f7df130a19fa176a50f4289d5dd4c8728ec8c]\r\n.",
]


#with open("text.txt", "w") as f:
#    f.write(bodies[4])


for body in bodies:
    group = re.match(
        "(?:(?:.*asked by (?:.*?)\.)|(?:.*This is your coding interview problem for today\.))(.*)(?:(?:We will be .*)|(?:^-+.*Upgrade.*))",
        body,
        flags=re.S | re.M,
    )
    string = group[1]
    string = string.strip()

    print("-" * 20)
    print(string)
    print("-" * 20)
